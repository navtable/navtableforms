How to use NavTableForms
------------------------

See next how to get your own customized form.

1- Create you data source
==========================

Create your data source: shapefiles / postgis database / etc as you need.

Example: you have a shape named example1.shp with following fields and geometry as a line...

- road_id
- road_name
- council

2 - Create your form with AbeilleForms
=======================================

Thinkg to keep in mind that you have to follow this naming convention for each component: "name_of_field_from_data_model.type_of_component", where:

- name_of_field_from_data_model: name of the field in your database/shape/etc
- type of component: choose one of available java components:

  - CB  = ComboBox
  - TF  = TextField
  - FTF = FormatedTextField
  - TA  = TextArea
  - TB  = Table
  - BT  = Button
  - RB  = RadioButton
  - CHB = CheckBox

Example: the name of components for the example could be:

- road_name.TF
- is_finish.CHB
- council.CB


3 - Define how the data will be imported in gvsig
==================================================

A XML defining the data model with data types supported by gvsig:

- fieldname: the name as defined in the data model
- fieldtype: type of value (one of gvsig supported types): varchar, integer, double, boolean, date.
- fieldalias: alias for the value, as far as I know, gvsig doesn't use this
- fieldlength: how long a field can be
- defaultvalue: value by default in case no one is provided
- fielddecimalcount: number of decimals allowed

Besides you will have to define some general data as:

- tablename: the name of the table/shape you want to define
- nameoflayer: the name of the table/shape you want to define
- geometry: type of geometry, the ones allowed are point, line, polygon and alphanumeric (in case is a dbf).

Example of a XML:

 <?xml version="1.0" encoding="UTF-8"?>
 <METADATA>
   <LAYER alias="Example 1">
     <TABLENAME>example1.shp</TABLENAME>
     <NAMEOFLAYER>example1.shp</NAMEOFLAYER>
     <GEOMETRY>Line</GEOMETRY>
     <RECORDSET>
       <FIELD>
         <FIELDNAME>road_id</FIELDNAME>
         <FIELDTYPE>Integer</FIELDTYPE>
         <FIELDALIAS></FIELDALIAS>
         <FIELDLENGTH>4</FIELDLENGTH>
         <DEFAULTVALUE></DEFAULTVALUE>
         <FIELDDECIMALCOUNT>0</FIELDDECIMALCOUNT>
       </FIELD>
       <FIELD>
         <FIELDNAME>road_name</FIELDNAME>
         <FIELDTYPE>String</FIELDTYPE>
         <FIELDALIAS></FIELDALIAS>
         <FIELDLENGTH>254</FIELDLENGTH>
         <DEFAULTVALUE></DEFAULTVALUE>
         <FIELDDECIMALCOUNT>0</FIELDDECIMALCOUNT>
       </FIELD>
       <FIELD>
         <FIELDNAME>council</FIELDNAME>
         <FIELDTYPE>String</FIELDTYPE>
         <FIELDALIAS></FIELDALIAS>
         <FIELDLENGTH>50</FIELDLENGTH>
         <DEFAULTVALUE></DEFAULTVALUE>
         <FIELDDECIMALCOUNT>0</FIELDDECIMALCOUNT>
       </FIELD>
     </RECORDSET>
   </LAYER>
 </METADATA>


4 - Create your extension which inherits from NavTableForms
============================================================

Just create the new extension and compile. Self-explained :)


Apendix - Some utilities
========================

- I have a PostgreSQL database already defined. Is it possible to generate the XML from it?

  Yep! Just use the createXMLFromPostgresDB.py script. Steps to make it work: 1) fill the parameters in ParamsForPostgresBuilder.py and 2) execute the script.

